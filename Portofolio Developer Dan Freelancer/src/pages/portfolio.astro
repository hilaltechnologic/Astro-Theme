---
import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';

const projects = [
  {
    id: 1,
    title: 'E-Commerce Platform',
    category: 'web',
    image: '/projects/ecommerce.jpg',
    description: 'A modern e-commerce platform built with Next.js, featuring advanced search, payment integration, and admin dashboard.',
    technologies: ['Next.js', 'TypeScript', 'Stripe', 'PostgreSQL'],
    liveUrl: '#',
    githubUrl: '#',
    featured: true,
    year: '2024'
  },
  {
    id: 2,
    title: 'Mobile Banking App',
    category: 'mobile',
    image: '/projects/banking.jpg',
    description: 'Cross-platform mobile banking application with biometric authentication and real-time transaction tracking.',
    technologies: ['React Native', 'Expo', 'Firebase', 'Biometrics'],
    liveUrl: '#',
    githubUrl: '#',
    featured: true,
    year: '2024'
  },
  {
    id: 3,
    title: 'AI-Powered Analytics Dashboard',
    category: 'web',
    image: '/projects/analytics.jpg',
    description: 'Real-time analytics dashboard with AI-powered insights and interactive data visualizations.',
    technologies: ['React', 'D3.js', 'Python', 'TensorFlow'],
    liveUrl: '#',
    githubUrl: '#',
    featured: false,
    year: '2023'
  },
  {
    id: 4,
    title: 'Task Management System',
    category: 'web',
    image: '/projects/task-manager.jpg',
    description: 'Collaborative task management system with real-time updates and team collaboration features.',
    technologies: ['Vue.js', 'Socket.io', 'MongoDB', 'Redis'],
    liveUrl: '#',
    githubUrl: '#',
    featured: false,
    year: '2023'
  },
  {
    id: 5,
    title: 'Fitness Tracking App',
    category: 'mobile',
    image: '/projects/fitness.jpg',
    description: 'Comprehensive fitness tracking app with workout plans, progress tracking, and social features.',
    technologies: ['React Native', 'GraphQL', 'AWS', 'Apple Health'],
    liveUrl: '#',
    githubUrl: '#',
    featured: false,
    year: '2023'
  },
  {
    id: 6,
    title: 'Real Estate Platform',
    category: 'web',
    image: '/projects/real-estate.jpg',
    description: 'Property listing platform with advanced search filters, virtual tours, and agent management.',
    technologies: ['Astro', 'Tailwind CSS', 'Supabase', 'Mapbox'],
    liveUrl: '#',
    githubUrl: '#',
    featured: true,
    year: '2023'
  },
  {
    id: 7,
    title: 'Restaurant Management System',
    category: 'web',
    image: '/projects/restaurant.jpg',
    description: 'Complete restaurant management solution with order processing, inventory, and customer management.',
    technologies: ['React', 'Node.js', 'PostgreSQL', 'Stripe'],
    liveUrl: '#',
    githubUrl: '#',
    featured: false,
    year: '2022'
  },
  {
    id: 8,
    title: 'Social Media Dashboard',
    category: 'web',
    image: '/projects/social-dashboard.jpg',
    description: 'Comprehensive social media management dashboard with scheduling and analytics.',
    technologies: ['Next.js', 'Prisma', 'Twitter API', 'Instagram API'],
    liveUrl: '#',
    githubUrl: '#',
    featured: false,
    year: '2022'
  },
  {
    id: 9,
    title: 'Weather App',
    category: 'mobile',
    image: '/projects/weather.jpg',
    description: 'Beautiful weather application with location-based forecasts and weather alerts.',
    technologies: ['React Native', 'OpenWeather API', 'Geolocation', 'Push Notifications'],
    liveUrl: '#',
    githubUrl: '#',
    featured: false,
    year: '2022'
  }
];

const categories = [
  { id: 'all', name: 'All Projects' },
  { id: 'web', name: 'Web Development' },
  { id: 'mobile', name: 'Mobile Apps' },
  { id: 'design', name: 'UI/UX Design' }
];

const years = ['2024', '2023', '2022', '2021'];
---

<Layout title="Portfolio - Your Name">
  <Header />
  
  <main class="pt-16">
    <!-- Hero Section -->
    <section class="py-20 bg-gradient-to-br from-secondary-50 to-primary-50 dark:from-secondary-900 dark:to-primary-900">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
        <h1 class="text-4xl sm:text-5xl font-bold text-secondary-900 dark:text-white mb-6">
          My Portfolio
        </h1>
        <p class="text-xl text-secondary-600 dark:text-secondary-300 max-w-3xl mx-auto">
          Explore my latest work and see how I bring ideas to life through innovative design and development. 
          Each project represents a unique challenge and solution.
        </p>
      </div>
    </section>

    <!-- Filters Section -->
    <section class="py-12 bg-white dark:bg-secondary-900 border-b border-secondary-200 dark:border-secondary-700">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex flex-col md:flex-row md:items-center md:justify-between gap-6">
          <!-- Category Filters -->
          <div class="flex flex-wrap gap-4">
            {categories.map((category) => (
              <button
                class="filter-btn px-6 py-3 rounded-lg font-medium transition-all duration-200"
                data-category={category.id}
                data-active={category.id === 'all' ? 'true' : 'false'}
              >
                {category.name}
              </button>
            ))}
          </div>

          <!-- Year Filter -->
          <div class="flex items-center space-x-4">
            <span class="text-sm font-medium text-secondary-600 dark:text-secondary-400">
              Filter by year:
            </span>
            <select
              id="year-filter"
              class="px-4 py-2 border border-secondary-300 dark:border-secondary-600 rounded-lg bg-white dark:bg-secondary-800 text-secondary-900 dark:text-white focus:ring-2 focus:ring-primary-500 focus:border-transparent"
            >
              <option value="all">All Years</option>
              {years.map((year) => (
                <option value={year}>{year}</option>
              ))}
            </select>
          </div>
        </div>
      </div>
    </section>

    <!-- Projects Grid -->
    <section class="py-20 bg-secondary-50 dark:bg-secondary-800">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8" id="projects-grid">
          {projects.map((project) => (
            <div 
              class="project-card group bg-white dark:bg-secondary-900 rounded-2xl overflow-hidden shadow-lg hover:shadow-2xl transition-all duration-300 transform hover:-translate-y-2"
              data-category={project.category}
              data-year={project.year}
            >
              <!-- Project Image -->
              <div class="relative h-48 bg-gradient-to-br from-primary-100 to-accent-100 dark:from-primary-900 dark:to-accent-900 overflow-hidden">
                <div class="absolute inset-0 bg-gradient-to-br from-primary-500/20 to-accent-500/20 group-hover:opacity-0 transition-opacity duration-300"></div>
                <div class="absolute inset-0 flex items-center justify-center">
                  <svg class="w-16 h-16 text-primary-500 dark:text-primary-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                  </svg>
                </div>
                {project.featured && (
                  <div class="absolute top-4 left-4 bg-primary-500 text-white px-3 py-1 rounded-full text-sm font-medium">
                    Featured
                  </div>
                )}
                <div class="absolute top-4 right-4 bg-secondary-800/80 text-white px-3 py-1 rounded-full text-sm font-medium">
                  {project.year}
                </div>
              </div>

              <!-- Project Content -->
              <div class="p-6">
                <h3 class="text-xl font-bold text-secondary-900 dark:text-white mb-3">
                  {project.title}
                </h3>
                <p class="text-secondary-600 dark:text-secondary-300 mb-4">
                  {project.description}
                </p>

                <!-- Technologies -->
                <div class="flex flex-wrap gap-2 mb-6">
                  {project.technologies.map((tech) => (
                    <span class="px-3 py-1 bg-secondary-100 dark:bg-secondary-800 text-secondary-700 dark:text-secondary-300 text-sm rounded-full">
                      {tech}
                    </span>
                  ))}
                </div>

                <!-- Project Links -->
                <div class="flex gap-4">
                  <a
                    href={project.liveUrl}
                    class="flex-1 inline-flex items-center justify-center px-4 py-2 text-sm font-medium text-primary-600 dark:text-primary-400 border border-primary-600 dark:border-primary-400 rounded-lg hover:bg-primary-600 hover:text-white dark:hover:bg-primary-400 dark:hover:text-secondary-900 transition-colors"
                  >
                    <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
                    </svg>
                    Live Demo
                  </a>
                  <a
                    href={project.githubUrl}
                    class="flex-1 inline-flex items-center justify-center px-4 py-2 text-sm font-medium text-secondary-600 dark:text-secondary-400 border border-secondary-300 dark:border-secondary-600 rounded-lg hover:bg-secondary-100 dark:hover:bg-secondary-800 transition-colors"
                  >
                    <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 24 24">
                      <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
                    </svg>
                    Code
                  </a>
                </div>
              </div>
            </div>
          ))}
        </div>

        <!-- No Results Message -->
        <div id="no-results" class="hidden text-center py-12">
          <svg class="w-16 h-16 text-secondary-400 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
          </svg>
          <h3 class="text-xl font-semibold text-secondary-600 dark:text-secondary-400 mb-2">
            No projects found
          </h3>
          <p class="text-secondary-500 dark:text-secondary-500">
            Try adjusting your filters to see more projects.
          </p>
        </div>
      </div>
    </section>

    <!-- CTA Section -->
    <section class="py-20 bg-gradient-to-r from-primary-600 to-accent-600">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
        <h2 class="text-3xl sm:text-4xl font-bold text-white mb-6">
          Ready to Start Your Project?
        </h2>
        <p class="text-xl text-primary-100 mb-8 max-w-3xl mx-auto">
          Inspired by what you see? Let's work together to create something amazing for your business.
        </p>
        <a
          href="/contact"
          class="inline-flex items-center px-8 py-4 bg-white text-primary-600 font-semibold rounded-lg hover:bg-secondary-50 transition-colors transform hover:scale-105 shadow-lg"
        >
          Start Your Project
          <svg class="w-5 h-5 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
          </svg>
        </a>
      </div>
    </section>
  </main>
</Layout>

<style>
  .filter-btn[data-active="true"] {
    @apply bg-primary-600 text-white;
  }
  
  .filter-btn[data-active="false"] {
    @apply bg-white dark:bg-secondary-800 text-secondary-600 dark:text-secondary-300 border border-secondary-300 dark:border-secondary-600 hover:bg-primary-600 hover:text-white dark:hover:bg-primary-400 dark:hover:text-secondary-900;
  }
</style>

<script>
  // Filter functionality
  const filterButtons = document.querySelectorAll('.filter-btn');
  const projectCards = document.querySelectorAll('.project-card');
  const yearFilter = document.getElementById('year-filter') as HTMLSelectElement;
  const noResults = document.getElementById('no-results');

  function filterProjects() {
    const activeCategory = document.querySelector('.filter-btn[data-active="true"]')?.getAttribute('data-category');
    const selectedYear = yearFilter?.value;
    
    let visibleCount = 0;

    projectCards.forEach(card => {
      const cardCategory = card.getAttribute('data-category');
      const cardYear = card.getAttribute('data-year');
      
      const categoryMatch = activeCategory === 'all' || cardCategory === activeCategory;
      const yearMatch = selectedYear === 'all' || cardYear === selectedYear;
      
      if (categoryMatch && yearMatch) {
        card.style.display = 'block';
        card.style.animation = 'fadeIn 0.5s ease-in-out';
        visibleCount++;
      } else {
        card.style.display = 'none';
      }
    });

    // Show/hide no results message
    if (noResults) {
      if (visibleCount === 0) {
        noResults.classList.remove('hidden');
      } else {
        noResults.classList.add('hidden');
      }
    }
  }

  // Category filter
  filterButtons.forEach(button => {
    button.addEventListener('click', () => {
      // Update active button
      filterButtons.forEach(btn => {
        btn.setAttribute('data-active', 'false');
      });
      button.setAttribute('data-active', 'true');
      
      filterProjects();
    });
  });

  // Year filter
  yearFilter?.addEventListener('change', filterProjects);
</script> 