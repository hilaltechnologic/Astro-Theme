---
import Layout from '../../layouts/Layout.astro';
import Header from '../../components/Header.astro';
import { getCollection } from 'astro:content';

// Get all blog posts
const posts = await getCollection('blog');
const sortedPosts = posts.sort((a, b) => new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime());

// Get unique categories
const categories = [...new Set(posts.flatMap(post => post.data.categories || []))];
---

<Layout title="Blog - Your Name">
  <Header />
  
  <main class="pt-16">
    <!-- Hero Section -->
    <section class="py-20 bg-gradient-to-br from-secondary-50 to-primary-50 dark:from-secondary-900 dark:to-primary-900">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
        <h1 class="text-4xl sm:text-5xl font-bold text-secondary-900 dark:text-white mb-6">
          Blog & Insights
        </h1>
        <p class="text-xl text-secondary-600 dark:text-secondary-300 max-w-3xl mx-auto">
          Sharing thoughts on web development, design, and the latest trends in technology. 
          Dive into articles about coding, freelancing, and digital innovation.
        </p>
      </div>
    </section>

    <!-- Blog Posts Grid -->
    <section class="py-20 bg-white dark:bg-secondary-900">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <!-- Categories Filter -->
        <div class="flex flex-wrap justify-center gap-4 mb-12">
          <button
            class="category-filter px-6 py-3 rounded-lg font-medium transition-all duration-200 bg-primary-600 text-white"
            data-category="all"
          >
            All Posts
          </button>
          {categories.map((category) => (
            <button
              class="category-filter px-6 py-3 rounded-lg font-medium transition-all duration-200 bg-white dark:bg-secondary-800 text-secondary-600 dark:text-secondary-300 border border-secondary-300 dark:border-secondary-600 hover:bg-primary-600 hover:text-white dark:hover:bg-primary-400 dark:hover:text-secondary-900"
              data-category={category}
            >
              {category}
            </button>
          ))}
        </div>

        <!-- Posts Grid -->
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8" id="posts-grid">
          {sortedPosts.map((post) => (
            <article 
              class="blog-card group bg-white dark:bg-secondary-800 rounded-2xl overflow-hidden shadow-lg hover:shadow-2xl transition-all duration-300 transform hover:-translate-y-2"
              data-categories={post.data.categories?.join(',') || ''}
            >
              <!-- Post Image -->
              <div class="relative h-48 bg-gradient-to-br from-primary-100 to-accent-100 dark:from-primary-900 dark:to-accent-900 overflow-hidden">
                {post.data.image && (
                  <img 
                    src={post.data.image} 
                    alt={post.data.title}
                    class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
                  />
                )}
                <div class="absolute inset-0 bg-gradient-to-br from-primary-500/20 to-accent-500/20 group-hover:opacity-0 transition-opacity duration-300"></div>
              </div>

              <!-- Post Content -->
              <div class="p-6">
                <!-- Categories -->
                {post.data.categories && (
                  <div class="flex flex-wrap gap-2 mb-4">
                    {post.data.categories.map((category) => (
                      <span class="px-3 py-1 bg-primary-100 dark:bg-primary-900 text-primary-700 dark:text-primary-300 text-sm rounded-full">
                        {category}
                      </span>
                    ))}
                  </div>
                )}

                <!-- Title -->
                <h2 class="text-xl font-bold text-secondary-900 dark:text-white mb-3 group-hover:text-primary-600 dark:group-hover:text-primary-400 transition-colors">
                  <a href={`/blog/${post.slug}`}>
                    {post.data.title}
                  </a>
                </h2>

                <!-- Excerpt -->
                <p class="text-secondary-600 dark:text-secondary-300 mb-4 line-clamp-3">
                  {post.data.excerpt || post.data.description}
                </p>

                <!-- Meta -->
                <div class="flex items-center justify-between text-sm text-secondary-500 dark:text-secondary-400">
                  <span>{new Date(post.data.pubDate).toLocaleDateString('en-US', { 
                    year: 'numeric', 
                    month: 'long', 
                    day: 'numeric' 
                  })}</span>
                  <span>{post.data.readingTime || '5 min read'}</span>
                </div>
              </div>
            </article>
          ))}
        </div>

        <!-- No Results Message -->
        <div id="no-results" class="hidden text-center py-12">
          <svg class="w-16 h-16 text-secondary-400 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
          </svg>
          <h3 class="text-xl font-semibold text-secondary-600 dark:text-secondary-400 mb-2">
            No posts found
          </h3>
          <p class="text-secondary-500 dark:text-secondary-500">
            Try adjusting your filters to see more posts.
          </p>
        </div>
      </div>
    </section>

    <!-- Newsletter Section -->
    <section class="py-20 bg-gradient-to-r from-primary-600 to-accent-600">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
        <h2 class="text-3xl sm:text-4xl font-bold text-white mb-6">
          Stay Updated
        </h2>
        <p class="text-xl text-primary-100 mb-8 max-w-3xl mx-auto">
          Get the latest insights on web development, design, and freelancing delivered to your inbox.
        </p>
        <form class="max-w-md mx-auto flex gap-4">
          <input
            type="email"
            placeholder="Enter your email"
            class="flex-1 px-4 py-3 rounded-lg text-secondary-900 placeholder-secondary-500 focus:outline-none focus:ring-2 focus:ring-white"
            required
          />
          <button
            type="submit"
            class="px-6 py-3 bg-white text-primary-600 font-semibold rounded-lg hover:bg-secondary-50 transition-colors"
          >
            Subscribe
          </button>
        </form>
      </div>
    </section>
  </main>
</Layout>

<style>
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>

<script>
  // Category filter functionality
  const categoryFilters = document.querySelectorAll('.category-filter');
  const blogCards = document.querySelectorAll('.blog-card');
  const noResults = document.getElementById('no-results');

  categoryFilters.forEach(filter => {
    filter.addEventListener('click', () => {
      const selectedCategory = filter.getAttribute('data-category');
      
      // Update active filter
      categoryFilters.forEach(f => {
        f.classList.remove('bg-primary-600', 'text-white');
        f.classList.add('bg-white', 'dark:bg-secondary-800', 'text-secondary-600', 'dark:text-secondary-300', 'border', 'border-secondary-300', 'dark:border-secondary-600');
      });
      filter.classList.remove('bg-white', 'dark:bg-secondary-800', 'text-secondary-600', 'dark:text-secondary-300', 'border', 'border-secondary-300', 'dark:border-secondary-600');
      filter.classList.add('bg-primary-600', 'text-white');
      
      // Filter posts
      let visibleCount = 0;
      blogCards.forEach(card => {
        const cardCategories = card.getAttribute('data-categories');
        
        if (selectedCategory === 'all' || (cardCategories && cardCategories.includes(selectedCategory))) {
          card.style.display = 'block';
          card.style.animation = 'fadeIn 0.5s ease-in-out';
          visibleCount++;
        } else {
          card.style.display = 'none';
        }
      });

      // Show/hide no results message
      if (noResults) {
        if (visibleCount === 0) {
          noResults.classList.remove('hidden');
        } else {
          noResults.classList.add('hidden');
        }
      }
    });
  });
</script> 